Program ::= Exp+
SExp ::= '(' ExpSeq ')'
ExpSeq ::= Exp ("space" Exp)+
Exp ::= (Comment | SExp | Atom | IExp | InfixExp)
Atom ::= (Identifier | Literal)
Literal ::= (Int | Float | String | Char)
IExp ::= ExpSeq "newline" ("<indent>" ExpSeq "newline")+
InfixExp ::= '{' Exp "space" Exp "space" Exp '}'
Comment ::= '-' '-'
digit ::= [0-9]
letter ::= [a-zA-Z]
decimal ::= [0-9]+
Int ::= decimal
Float ::= decimal "." decimal
UniChar ::= "Any Unicode character"
AlphaNumChar ::= "Any alphanumeric Unicode character"
PunctuationChar ::= "Any punctuation Unicode character"
LowerUni ::= "Any lowercase Unicode character"
UpperUni ::= "Any uppercase Unicode character"
Char ::= "'" UniChar "'"
String ::= '"' UniChar+ '"'
Identifier ::= ( VarId | TypeId )
VarId ::= LowerUni (AlphaNumChar - ReservedSymbols)* | (PunctuationChar - ReservedSymbols)*
TypeId ::= UpperUni (AlphaNumChar - ReservedSymbols)*
ReservedSymbols ::= ('(' | ')' | '{' | '}') | ' ' | 'whitespace' | 'apostrophe' | 'quotation'
ValidSymbol ::=  UniChar - ReservedSymbols
